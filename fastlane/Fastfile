require 'yaml'
fastlane_version "1.30.1"

before_all do
  #ensure_git_status_clean
  #gym(scheme: "Example") # Build your app - more options available
  #xctool # run the tests of your app
  #ensure_git_branch(branch: 'develop')
end

desc "Runs all the tests"
lane :test do
end

desc "Prepare for pod release"
desc "This will perform the following actions:"
desc "- Get the latest version number from CHANGELOG"
desc "- Ensure the CHANGELOG has notes for current version"
desc "- Update CocoaUPnP.podspec to the latest version"
desc "- Update the Example app version number"
desc "- Commit update changes to git"
desc "- Push to develop branch"
lane :pod do
  # Load latest change from changelog
  changelog = YAML.load_file('../CHANGELOG.yml')
  latest_change = changelog['releases'].first

  # Check there is at least one change for the latest version
  if latest_change['notes'].count == 0
    raise("No update notes in changelog for latest version")
  end

  # Check that new version is greater than current podspec version
  new_version_number = latest_change['version']
  podspec_path = "CocoaUPnP.podspec"
  current_version = version_get_podspec(path: podspec_path)
  if new_version_number <= current_version
    raise("New version is not greater than current version")
  end

  # Update PodSpec with new version number
  version_bump_podspec(path: podspec_path,
                       version_number: new_version_number)

  # Update Example project with new version
  increment_version_number(version_number: new_version_number,
                           xcodeproj: "Example/Example.xcodeproj")

  # Commit updated files
  paths = 'CocoaUPnP.podspec Example/Example/Info.plist Example/ExampleTests-Info.plist'
  message = "Updating Pod to version #{new_version_number}"
  git_commit(path: paths, message: message)

  # Push to develop branch
  push_to_git_remote(local_branch: 'develop',
                     remote_branch: 'develop')
end

after_all do |lane|
  # This block is called, only if the executed lane was successful
end

error do |lane, exception|
end


# More information about multiple platforms in fastlane: 
# https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
